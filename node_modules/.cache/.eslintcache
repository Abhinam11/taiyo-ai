[{"/Users/gauravsinghmehra/Downloads/taiyo-ai/src/index.tsx":"1","/Users/gauravsinghmehra/Downloads/taiyo-ai/src/reportWebVitals.ts":"2","/Users/gauravsinghmehra/Downloads/taiyo-ai/src/App.tsx":"3","/Users/gauravsinghmehra/Downloads/taiyo-ai/src/Redux/store.ts":"4","/Users/gauravsinghmehra/Downloads/taiyo-ai/src/Components/Navbar.tsx":"5","/Users/gauravsinghmehra/Downloads/taiyo-ai/src/Routes/AllRoutes.tsx":"6","/Users/gauravsinghmehra/Downloads/taiyo-ai/src/Redux/ChartReducer/reducer.ts":"7","/Users/gauravsinghmehra/Downloads/taiyo-ai/src/Redux/ContactReducer/reducer.ts":"8","/Users/gauravsinghmehra/Downloads/taiyo-ai/src/Redux/ChartReducer/actionTypes.ts":"9","/Users/gauravsinghmehra/Downloads/taiyo-ai/src/Redux/ContactReducer/actionTypes.ts":"10","/Users/gauravsinghmehra/Downloads/taiyo-ai/src/Pages/Contact.tsx":"11","/Users/gauravsinghmehra/Downloads/taiyo-ai/src/Pages/Chart.tsx":"12","/Users/gauravsinghmehra/Downloads/taiyo-ai/src/Redux/ContactReducer/action.ts":"13","/Users/gauravsinghmehra/Downloads/taiyo-ai/src/Components/Create.tsx":"14","/Users/gauravsinghmehra/Downloads/taiyo-ai/src/Components/EditModal.tsx":"15","/Users/gauravsinghmehra/Downloads/taiyo-ai/src/Components/ChartComponent.tsx":"16","/Users/gauravsinghmehra/Downloads/taiyo-ai/src/Components/Alert.tsx":"17"},{"size":881,"mtime":1717020011048,"results":"18","hashOfConfig":"19"},{"size":425,"mtime":1717020011050,"results":"20","hashOfConfig":"19"},{"size":237,"mtime":1717020011042,"results":"21","hashOfConfig":"19"},{"size":438,"mtime":1717020011047,"results":"22","hashOfConfig":"19"},{"size":612,"mtime":1717020011044,"results":"23","hashOfConfig":"19"},{"size":393,"mtime":1717020011047,"results":"24","hashOfConfig":"19"},{"size":856,"mtime":1717020011045,"results":"25","hashOfConfig":"19"},{"size":1208,"mtime":1717020011046,"results":"26","hashOfConfig":"19"},{"size":182,"mtime":1717020011045,"results":"27","hashOfConfig":"19"},{"size":302,"mtime":1717020011046,"results":"28","hashOfConfig":"19"},{"size":2933,"mtime":1717020917867,"results":"29","hashOfConfig":"19"},{"size":3728,"mtime":1717022088128,"results":"30","hashOfConfig":"19"},{"size":655,"mtime":1717020011046,"results":"31","hashOfConfig":"19"},{"size":5960,"mtime":1717020660391,"results":"32","hashOfConfig":"19"},{"size":6360,"mtime":1717020011044,"results":"33","hashOfConfig":"19"},{"size":2313,"mtime":1717020011043,"results":"34","hashOfConfig":"19"},{"size":626,"mtime":1717020011043,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17bjjrm",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/gauravsinghmehra/Downloads/taiyo-ai/src/index.tsx",[],[],"/Users/gauravsinghmehra/Downloads/taiyo-ai/src/reportWebVitals.ts",[],[],"/Users/gauravsinghmehra/Downloads/taiyo-ai/src/App.tsx",[],[],"/Users/gauravsinghmehra/Downloads/taiyo-ai/src/Redux/store.ts",[],[],"/Users/gauravsinghmehra/Downloads/taiyo-ai/src/Components/Navbar.tsx",[],[],"/Users/gauravsinghmehra/Downloads/taiyo-ai/src/Routes/AllRoutes.tsx",["93"],[],"import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Contact from \"../Pages/Contact\";\nimport Chart from \"../Pages/Chart\";\nimport Create from \"../Components/Create\";\n\nconst AllRoutes = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Contact />} />\n      <Route path=\"/chart\" element={<Chart />} />\n    </Routes>\n  );\n};\n\nexport default AllRoutes;\n","/Users/gauravsinghmehra/Downloads/taiyo-ai/src/Redux/ChartReducer/reducer.ts",[],[],"/Users/gauravsinghmehra/Downloads/taiyo-ai/src/Redux/ContactReducer/reducer.ts",[],[],"/Users/gauravsinghmehra/Downloads/taiyo-ai/src/Redux/ChartReducer/actionTypes.ts",[],[],"/Users/gauravsinghmehra/Downloads/taiyo-ai/src/Redux/ContactReducer/actionTypes.ts",[],[],"/Users/gauravsinghmehra/Downloads/taiyo-ai/src/Pages/Contact.tsx",["94","95","96"],[],"import React from \"react\";\nimport {\n  getDataError,\n  getDataRequest,\n  getDataSuccess,\n  deleteContact,\n} from \"../Redux/ContactReducer/action\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Create from \"../Components/Create\";\nimport { VscError } from \"react-icons/vsc\";\nimport { ContactType } from \"../Components/Create\";\nimport EditModal from \"../Components/EditModal\";\n\nconst Contact = () => {\n  const dispatch = useDispatch();\n  const data = useSelector((store: any) => store.ContactReducer.data);\n  console.log(data);\n\n  const handleDelete = (id: string) => {\n    dispatch(getDataRequest());\n    try {\n      let filteredData = data.filter((el: ContactType) => {\n        return el.id !== id;\n      });\n      dispatch(deleteContact(filteredData));\n      alert(\"Data deleted successfully\");\n    } catch (err) {\n      dispatch(getDataError());\n    }\n  };\n\n  const handleEdit = (id: string, payload: ContactType) => {};\n  return (\n    <>\n      <h1 className=\"text-center bg-gray-800 text-white\">Create Contact</h1>\n      <div className=\"w-full h-screen px-8 py-8 flex justify-center place-items-start bg-gray-800\">\n        <div className=\"w-full bg-white sm:w-80 md:w-60 lg:w-1/3 xl:w-1/3 max-w-xs sm:max-w-sm md:max-w-md lg:max-w-lg xl:max-w-xl flex-col justify-center items-center border px-4 py-4 text-center rounded\">\n          <Create />\n          {/* {data.length && (\n            <div className=\"mt-12 text-center\">\n              <p>\n                No Contact Found.\n                <br /> Please add contact from Create contact button.\n              </p>\n            </div>\n          )} */}\n          {data && data.length > 0 ? (\n            data?.map((el: ContactType, i: number) => (\n              <div\n                key={el?.id}\n                className=\"px-4 py-2 mt-4 border rounded grid gap-4 sm:flex sm:flex-col md:grid-cols-2 lg:grid-cols-3\"\n              >\n                <p>\n                  {el?.first} {el?.last}\n                </p>\n                <p>{el?.status}</p>\n                <EditModal id={el?.id} />\n                <button\n                  className=\"border rounded bg-red-500 text-white cursor-pointer py-2 px-4\"\n                  onClick={() => handleDelete(el?.id)}\n                >\n                  Delete\n                </button>\n              </div>\n            ))\n          ) : (\n            <div className=\"mt-12 text-center\">\n              <p>\n                No Contact Found.\n                <br /> Please add contact from Create contact button.\n              </p>\n            </div>\n          )}\n        </div>\n        {/* {data &&\n          data?.map((el: any, i: number) => {\n            return (\n              <div key={el?.id}>\n                <p>\n                  {el?.first}+ +{el?.last}\n                </p>\n                <p>{el?.status}</p>\n              </div>\n            );\n          })} */}\n      </div>\n    </>\n  );\n};\n\nexport default Contact;\n","/Users/gauravsinghmehra/Downloads/taiyo-ai/src/Pages/Chart.tsx",["97","98","99","100","101","102","103","104"],[],"import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport axios from \"axios\";\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from \"react-leaflet\";\n\nimport \"leaflet/dist/leaflet.css\";\nimport ChartComponent from \"../Components/ChartComponent\";\nexport interface CountryDataType {\n  active: number;\n  activePerOneMillion: number;\n  cases: number;\n  casesPerOneMillion: number;\n  continent: string;\n  country: string;\n  countryInfo: {\n    flag: string;\n    iso2: string;\n    iso3: string;\n    lat: number;\n    long: number;\n    _id: number;\n  };\n  critical: number;\n  criticalPerOneMillion: number;\n  deaths: number;\n  deathsPerOneMillion: number;\n  oneCasePerPeople: number;\n  oneDeathPerPeople: number;\n  oneTestPerPeople: number;\n  population: number;\n  recovered: number;\n  recoveredPerOneMillion: number;\n  tests: number;\n  testsPerOneMillion: number;\n  todayCases: number;\n  todayDeaths: number;\n  todayRecovered: number;\n  updated: number;\n}\n\nconst getData = async (): Promise<CountryDataType[]> => {\n  const { data } = await axios.get<CountryDataType[]>(\n    \"https://disease.sh/v3/covid-19/countries\"\n  );\n  const flattenedData = data.reduce(\n    (acc: CountryDataType[], curr: CountryDataType) => acc.concat([curr]),\n    []\n  );\n  // const countryLatLng: { [key: string]: LatLngExpression } = {};\n  // data.forEach((item) => {\n  //   countryLatLng[item.countryInfo.iso2] = [\n  //     item.countryInfo.lat,\n  //     item.countryInfo.long,\n  //   ];\n  // });\n  // return flattenedData.map((item) => ({\n  //   ...item,\n  //   latlng: countryLatLng[item.countryInfo.iso2],\n  // }));\n  return flattenedData;\n};\nconst Chart = () => {\n  const { data: allData, isLoading } = useQuery<CountryDataType[]>(\n    \"countryData\",\n    getData\n  );\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [lat, setLat] = useState<number | null>(null);\n  const [long, setLong] = useState<number | null>(null);\n  const [filteredData, setFilteredData] = useState<CountryDataType[]>([]);\n  useEffect(() => {\n    const timerId = setTimeout(() => {\n      const filtered = allData?.filter((el) => {\n        return el?.country?.toLowerCase().includes(searchTerm.toLowerCase());\n      });\n      setFilteredData(filtered || []);\n    }, 500);\n\n    if (filteredData.length === 1) {\n      setLat(filteredData[0]?.countryInfo?.lat);\n      setLong(filteredData[0]?.countryInfo?.long);\n    } else {\n      setLat(null);\n      setLong(null);\n    }\n    return () => clearTimeout(timerId);\n  }, [searchTerm, allData]);\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n  console.log(\"Data\", filteredData);\n\n  return (\n    <div className=\"flex flex-col bg-gray-800 justify-center items-center w-full h-100 px-4 py-14 gap-4\">\n      <input\n        type=\"text\"\n        placeholder=\"Search By Country\"\n        value={searchTerm}\n        className=\"px-2 py-2 border rounded\"\n        onChange={(e) => setSearchTerm(e.target.value)}\n      />\n\n      {filteredData && filteredData.length === 1 ? (\n        <div className=\"border px-4 py-4 bg-white rounded flex-col gap-4\">\n          <p>{filteredData[0]?.country}</p>\n          <p>Active Cases: {filteredData[0]?.active}</p>\n          <p>Recovered Cases: {filteredData[0]?.recovered}</p>\n          <p>Deaths Cases: {filteredData[0]?.deaths}</p>\n          <ChartComponent activeCases={filteredData[0]?.active} recoveredCases={filteredData[0]?.recovered} deathCases={filteredData[0]?.deaths} />\n        </div>\n      ) : (\n        <div className=\"text-white\">\n          <p>No data Found.</p>\n          <div className=\"bg-gray-800 text-white justify-center items-center w-full h-screen\" ></div>\n        </div> \n      )}\n    </div>\n  );\n};\n\nexport default Chart;","/Users/gauravsinghmehra/Downloads/taiyo-ai/src/Redux/ContactReducer/action.ts",[],[],"/Users/gauravsinghmehra/Downloads/taiyo-ai/src/Components/Create.tsx",["105"],[],"import React, { useState, Fragment, FormEvent, ChangeEvent } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Dialog, Transition } from \"@headlessui/react\";\nimport {\n  getDataError,\n  getDataRequest,\n  getDataSuccess,\n} from \"../Redux/ContactReducer/action\";\nimport Alert from \"./Alert\";\n\nexport interface ContactType {\n  first: string;\n  last: string;\n  status: string;\n  id: string;\n}\n\nconst Create = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [contact, setContact] = useState<ContactType>({\n    first: \"\",\n    last: \"\",\n    status: \"\",\n    id: \"\",\n  });\n  const initState: ContactType = {\n    first: \"\",\n    last: \"\",\n    status: \"\",\n    id: \"\",\n  };\n  const dispatch = useDispatch();\n  const [showAlert, setShowAlert] = useState(false);\n  const data = useSelector((store: any) => store.ContactReducer.data);\n\n  const openModal = () => setIsOpen(true);\n  const closeModal = () => setIsOpen(false);\n\n  const handleChange = (\n    event: ChangeEvent<HTMLInputElement | HTMLSelectElement>\n  ) => {\n    const { name, value } = event.target;\n    setContact((prevContact) => ({ ...prevContact, [name]: value }));\n  };\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    let { first, last, status } = contact;\n    let id = first + Math.random() + last;\n    try {\n      dispatch(getDataRequest());\n      if (!contact.first || !contact.last || !contact.status) {\n        closeModal();\n        return setShowAlert(true);\n        // return alert(\"All Data feilds must be filled\");\n      } else {\n        dispatch(getDataSuccess({ ...contact, first, last, status, id }));\n        setShowAlert(false);\n        setContact(initState);\n        closeModal();\n      }\n    } catch (err) {\n      console.error(err);\n      dispatch(getDataError());\n    }\n  };\n  return (\n    <>\n      {showAlert && <Alert />}\n      <button\n        onClick={openModal}\n        className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n      >\n        Create Contact\n      </button>\n\n      <Transition appear show={isOpen} as={Fragment}>\n        <Dialog\n          as=\"div\"\n          className=\"fixed inset-0 z-10 overflow-y-auto\"\n          onClose={closeModal}\n        >\n          <div className=\"min-h-screen px-4 text-center\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0\"\n              enterTo=\"opacity-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100\"\n              leaveTo=\"opacity-0\"\n            >\n              <Dialog.Overlay className=\"fixed inset-0 bg-black opacity-50\" />\n            </Transition.Child>\n\n            <span\n              className=\"inline-block h-screen align-middle\"\n              aria-hidden=\"true\"\n            >\n              &#8203;\n            </span>\n\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <div className=\"inline-block w-full max-w-md p-6 my-8 overflow-hidden text-center align-middle transition-all transform bg-white shadow-xl rounded-2xl\">\n                <Dialog.Title\n                  as=\"h3\"\n                  className=\"text-lg font-medium leading-6 text-gray-900\"\n                >\n                  Create Contact Screen\n                </Dialog.Title>\n                <div className=\"mt-2\">\n                  <p className=\"text-sm text-gray-500\">\n                    Enter Data in Respective feilds\n                  </p>\n                  <form onSubmit={handleSubmit}>\n                    <input\n                      className=\"border mt-2 px-2 py-2\"\n                      placeholder=\"Enter First Name\"\n                      name=\"first\"\n                      onChange={handleChange}\n                    />\n                    <input\n                      className=\"border mt-2 px-2 py-2\"\n                      placeholder=\"Enter Last Name\"\n                      name=\"last\"\n                      onChange={handleChange}\n                    />\n                    <div className=\"mt-4 mb-2\">\n                      <label className=\"mx-2\">Status:</label>\n                      <input\n                        className=\"mx-2\"\n                        type=\"radio\"\n                        name=\"status\"\n                        value=\"Active\"\n                        onChange={handleChange}\n                      />\n                      Active\n                      <input\n                        className=\"mx-2\"\n                        type=\"radio\"\n                        name=\"status\"\n                        value=\"Inactive\"\n                      />\n                      Inactive\n                    </div>\n                    <button\n                      type=\"submit\"\n                      className=\"inline-flex justify-center px-4 py-2 text-sm font-medium text-blue-600 border border-blue-600 rounded\"\n                    >\n                      Save Contact\n                    </button>\n                  </form>\n                </div>\n\n                <div className=\"mt-4\">\n                  <button\n                    type=\"button\"\n                    className=\"inline-flex justify-center px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md hover:bg-blue-700 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500\"\n                    onClick={closeModal}\n                  >\n                    Close\n                  </button>\n                </div>\n              </div>\n            </Transition.Child>\n          </div>\n        </Dialog>\n      </Transition>\n    </>\n  );\n};\n\nexport default Create;\n","/Users/gauravsinghmehra/Downloads/taiyo-ai/src/Components/EditModal.tsx",["106","107"],[],"import React, { useState, Fragment, FormEvent, ChangeEvent } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Dialog, Transition } from \"@headlessui/react\";\nimport {\n  getDataError,\n  getDataRequest,\n  getDataSuccess,\n  editContact,\n} from \"../Redux/ContactReducer/action\";\n\ninterface Props {\n  id: string;\n}\n\nexport interface ContactType {\n  first: string;\n  last: string;\n  status: string;\n  id: string;\n}\n\nconst EditModal = ({ id }: Props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [contact, setContact] = useState<ContactType>({\n    first: \"\",\n    last: \"\",\n    status: \"\",\n    id: \"\",\n  });\n  const initState: ContactType = {\n    first: \"\",\n    last: \"\",\n    status: \"\",\n    id: \"\",\n  };\n  const dispatch = useDispatch();\n  const [showAlert, setShowAlert] = useState(false);\n  const data = useSelector((store: any) => store.ContactReducer.data);\n  let filteredData = data.filter((el: ContactType) => {\n    return el.id === id;\n  });\n\n  const openModal = () => setIsOpen(true);\n  const closeModal = () => setIsOpen(false);\n\n  const handleChange = (\n    event: ChangeEvent<HTMLInputElement | HTMLSelectElement>\n  ) => {\n    const { name, value } = event.target;\n    setContact((prevContact) => ({ ...prevContact, [name]: value }));\n  };\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    try {\n      dispatch(getDataRequest());\n      if (!contact.first || !contact.last || !contact.status) {\n        closeModal();\n        return setShowAlert(true);\n        // return alert(\"All Data feilds must be filled\");\n      } else {\n        let new_data = data?.map((el: ContactType) => {\n          if (el.id === id) {\n            return contact;\n          } else {\n            return id;\n          }\n        });\n        dispatch(editContact(new_data));\n        setShowAlert(false);\n        setContact(initState);\n        closeModal();\n      }\n    } catch (err) {\n      console.error(err);\n      dispatch(getDataError());\n    }\n  };\n  return (\n    <>\n      <button\n        onClick={openModal}\n        className=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\"\n      >\n        Edit\n      </button>\n\n      <Transition appear show={isOpen} as={Fragment}>\n        <Dialog\n          as=\"div\"\n          className=\"fixed inset-0 z-10 overflow-y-auto\"\n          onClose={closeModal}\n        >\n          <div className=\"min-h-screen px-4 text-center\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0\"\n              enterTo=\"opacity-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100\"\n              leaveTo=\"opacity-0\"\n            >\n              <Dialog.Overlay className=\"fixed inset-0 bg-black opacity-50\" />\n            </Transition.Child>\n\n            <span\n              className=\"inline-block h-screen align-middle\"\n              aria-hidden=\"true\"\n            >\n              &#8203;\n            </span>\n\n            <Transition.Child\n              as={Fragment}\n              enter=\"ease-out duration-300\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"ease-in duration-200\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <div className=\"inline-block w-full max-w-md p-6 my-8 overflow-hidden text-center align-middle transition-all transform bg-white shadow-xl rounded-2xl\">\n                <Dialog.Title\n                  as=\"h3\"\n                  className=\"text-lg font-medium leading-6 text-gray-900\"\n                >\n                  Edit Contact Screen\n                </Dialog.Title>\n                <div className=\"mt-2\">\n                  <p className=\"text-sm text-gray-500\">\n                    Enter Data in Respective feilds\n                  </p>\n                  <form onSubmit={handleSubmit}>\n                    <input\n                      className=\"border mt-2 px-2 py-2\"\n                      placeholder=\"Enter New First Name\"\n                      name=\"first\"\n                      value={filteredData?.first}\n                      onChange={handleChange}\n                    />\n                    <input\n                      className=\"border mt-2 px-2 py-2\"\n                      placeholder=\"Enter New Last Name\"\n                      name=\"last\"\n                      value={filteredData?.last}\n                      onChange={handleChange}\n                    />\n                    <div className=\"mt-4 mb-2\">\n                      <label className=\"mx-2\">Status:</label>\n                      <input\n                        className=\"mx-2\"\n                        type=\"radio\"\n                        name=\"status\"\n                        value=\"Active\"\n                        checked={filteredData?.status === \"Active\"}\n                        onChange={handleChange}\n                      />\n                      Active\n                      <input\n                        className=\"mx-2\"\n                        type=\"radio\"\n                        name=\"status\"\n                        checked={filteredData?.status === \"Inactive\"}\n                        value=\"Inactive\"\n                      />\n                      Inactive\n                    </div>\n                    <button\n                      type=\"submit\"\n                      className=\"inline-flex justify-center px-4 py-2 text-sm font-medium text-blue-600 border border-blue-600 rounded\"\n                    >\n                      Save Editted Contact\n                    </button>\n                  </form>\n                </div>\n\n                <div className=\"mt-4\">\n                  <button\n                    type=\"button\"\n                    className=\"inline-flex justify-center px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md hover:bg-blue-700 focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500\"\n                    onClick={closeModal}\n                  >\n                    Close\n                  </button>\n                </div>\n              </div>\n            </Transition.Child>\n          </div>\n        </Dialog>\n      </Transition>\n    </>\n  );\n};\n\nexport default EditModal;\n","/Users/gauravsinghmehra/Downloads/taiyo-ai/src/Components/ChartComponent.tsx",["108","109","110","111","112"],[],"import React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport Chart, { ChartData } from \"chart.js/auto\";\n\ninterface ChartProps {\n  activeCases: number;\n  recoveredCases: number;\n  deathCases: number;\n}\n\ninterface ChartDataInterface {\n  labels: string[];\n  datasets: {\n    label: string;\n    data: number[];\n    backgroundColor: string;\n    borderColor: string;\n    borderWidth: number;\n    fill: boolean;\n  }[];\n}\n\n// interface ChartProps {\n//   chartData: ChartData;\n// }\nconst monthNames = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nconst ChartComponent: React.FC<ChartProps> = ({\n  activeCases,\n  recoveredCases,\n  deathCases,\n}) => {\n  const data = {\n    labels: [\"Active Cases\", \"Recovered Cases\", \"Deaths Cases\"],\n    datasets: [\n      {\n        label: \"COVID-19 Cases in India\",\n        data: [activeCases, recoveredCases, deathCases],\n        backgroundColor: [\"#ff6384\", \"#36a2eb\", \"#cc65fe\"],\n        hoverBackgroundColor: [\"#ff6384\", \"#36a2eb\", \"#cc65fe\"],\n      },\n    ],\n  };\n  const d = new Date();\n  let m = monthNames[d.getMonth()];\n  const [chartData, setChartData] = React.useState<ChartDataInterface>({\n    labels: [\"March\"],\n    datasets: [\n      {\n        label: \"Active Cases\",\n        data: [activeCases],\n        backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n        borderColor: \"rgba(255,99,132,1)\",\n        borderWidth: 1,\n        fill: false,\n      },\n      {\n        label: \"Recovered Cases\",\n        data: [recoveredCases],\n        backgroundColor: \"rgba(54, 162, 235, 0.2)\",\n        borderColor: \"rgba(54, 162, 235, 1)\",\n        borderWidth: 1,\n        fill: false,\n      },\n      {\n        label: \"Deaths Cases\",\n        data: [deathCases],\n        backgroundColor: \"rgba(255, 206, 86, 0.2)\",\n        borderColor: \"rgba(255, 206, 86, 1)\",\n        borderWidth: 1,\n        fill: false,\n      },\n    ],\n  });\n\n  React.useEffect(() => {\n    const ctx = document.getElementById(\"myChart\") as HTMLCanvasElement;\n    const myChart = new Chart(ctx, {\n      type: \"bar\",\n      data: chartData,\n    });\n    return () => {\n      myChart.destroy();\n    };\n  }, [chartData]);\n\n  return <canvas id=\"myChart\" width={400} height={400} />;\n};\n\nexport default ChartComponent;\n","/Users/gauravsinghmehra/Downloads/taiyo-ai/src/Components/Alert.tsx",[],[],{"ruleId":"113","severity":1,"message":"114","line":5,"column":8,"nodeType":"115","messageId":"116","endLine":5,"endColumn":14},{"ruleId":"113","severity":1,"message":"117","line":5,"column":3,"nodeType":"115","messageId":"116","endLine":5,"endColumn":17},{"ruleId":"113","severity":1,"message":"118","line":10,"column":10,"nodeType":"115","messageId":"116","endLine":10,"endColumn":18},{"ruleId":"113","severity":1,"message":"119","line":32,"column":9,"nodeType":"115","messageId":"116","endLine":32,"endColumn":19},{"ruleId":"113","severity":1,"message":"120","line":4,"column":10,"nodeType":"115","messageId":"116","endLine":4,"endColumn":22},{"ruleId":"113","severity":1,"message":"121","line":4,"column":24,"nodeType":"115","messageId":"116","endLine":4,"endColumn":33},{"ruleId":"113","severity":1,"message":"122","line":4,"column":35,"nodeType":"115","messageId":"116","endLine":4,"endColumn":41},{"ruleId":"113","severity":1,"message":"123","line":4,"column":43,"nodeType":"115","messageId":"116","endLine":4,"endColumn":48},{"ruleId":"113","severity":1,"message":"124","line":4,"column":50,"nodeType":"115","messageId":"116","endLine":4,"endColumn":56},{"ruleId":"113","severity":1,"message":"125","line":68,"column":10,"nodeType":"115","messageId":"116","endLine":68,"endColumn":13},{"ruleId":"113","severity":1,"message":"126","line":69,"column":10,"nodeType":"115","messageId":"116","endLine":69,"endColumn":14},{"ruleId":"127","severity":1,"message":"128","line":87,"column":6,"nodeType":"129","endLine":87,"endColumn":27,"suggestions":"130"},{"ruleId":"113","severity":1,"message":"131","line":34,"column":9,"nodeType":"115","messageId":"116","endLine":34,"endColumn":13},{"ruleId":"113","severity":1,"message":"117","line":7,"column":3,"nodeType":"115","messageId":"116","endLine":7,"endColumn":17},{"ruleId":"113","severity":1,"message":"132","line":37,"column":10,"nodeType":"115","messageId":"116","endLine":37,"endColumn":19},{"ruleId":"113","severity":1,"message":"133","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":18},{"ruleId":"113","severity":1,"message":"134","line":3,"column":17,"nodeType":"115","messageId":"116","endLine":3,"endColumn":26},{"ruleId":"113","severity":1,"message":"131","line":46,"column":9,"nodeType":"115","messageId":"116","endLine":46,"endColumn":13},{"ruleId":"113","severity":1,"message":"135","line":58,"column":7,"nodeType":"115","messageId":"116","endLine":58,"endColumn":8},{"ruleId":"113","severity":1,"message":"136","line":59,"column":21,"nodeType":"115","messageId":"116","endLine":59,"endColumn":33},"@typescript-eslint/no-unused-vars","'Create' is defined but never used.","Identifier","unusedVar","'getDataSuccess' is defined but never used.","'VscError' is defined but never used.","'handleEdit' is assigned a value but never used.","'MapContainer' is defined but never used.","'TileLayer' is defined but never used.","'Marker' is defined but never used.","'Popup' is defined but never used.","'useMap' is defined but never used.","'lat' is assigned a value but never used.","'long' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filteredData'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLat' needs the current value of 'filteredData'.","ArrayExpression",["137"],"'data' is assigned a value but never used.","'showAlert' is assigned a value but never used.","'Doughnut' is defined but never used.","'ChartData' is defined but never used.","'m' is assigned a value but never used.","'setChartData' is assigned a value but never used.",{"desc":"138","fix":"139"},"Update the dependencies array to be: [searchTerm, allData, filteredData]",{"range":"140","text":"141"},[2519,2540],"[searchTerm, allData, filteredData]"]