{"ast":null,"code":"import _slicedToArray from\"/Users/gauravsinghmehra/Downloads/taiyo-ai/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import Chart from\"chart.js/auto\";import{jsx as _jsx}from\"react/jsx-runtime\";// interface ChartProps {\n//   chartData: ChartData;\n// }\nvar monthNames=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];var ChartComponent=function ChartComponent(_ref){var activeCases=_ref.activeCases,recoveredCases=_ref.recoveredCases,deathCases=_ref.deathCases;var data={labels:[\"Active Cases\",\"Recovered Cases\",\"Deaths Cases\"],datasets:[{label:\"COVID-19 Cases in India\",data:[activeCases,recoveredCases,deathCases],backgroundColor:[\"#ff6384\",\"#36a2eb\",\"#cc65fe\"],hoverBackgroundColor:[\"#ff6384\",\"#36a2eb\",\"#cc65fe\"]}]};var d=new Date();var m=monthNames[d.getMonth()];var _React$useState=React.useState({labels:[\"March\"],datasets:[{label:\"Active Cases\",data:[activeCases],backgroundColor:\"rgba(255, 99, 132, 0.2)\",borderColor:\"rgba(255,99,132,1)\",borderWidth:1,fill:false},{label:\"Recovered Cases\",data:[recoveredCases],backgroundColor:\"rgba(54, 162, 235, 0.2)\",borderColor:\"rgba(54, 162, 235, 1)\",borderWidth:1,fill:false},{label:\"Deaths Cases\",data:[deathCases],backgroundColor:\"rgba(255, 206, 86, 0.2)\",borderColor:\"rgba(255, 206, 86, 1)\",borderWidth:1,fill:false}]}),_React$useState2=_slicedToArray(_React$useState,2),chartData=_React$useState2[0],setChartData=_React$useState2[1];React.useEffect(function(){var ctx=document.getElementById(\"myChart\");var myChart=new Chart(ctx,{type:\"bar\",data:chartData});return function(){myChart.destroy();};},[chartData]);return/*#__PURE__*/_jsx(\"canvas\",{id:\"myChart\",width:400,height:400});};export default ChartComponent;","map":{"version":3,"names":["React","Chart","jsx","_jsx","monthNames","ChartComponent","_ref","activeCases","recoveredCases","deathCases","data","labels","datasets","label","backgroundColor","hoverBackgroundColor","d","Date","m","getMonth","_React$useState","useState","borderColor","borderWidth","fill","_React$useState2","_slicedToArray","chartData","setChartData","useEffect","ctx","document","getElementById","myChart","type","destroy","id","width","height"],"sources":["/Users/gauravsinghmehra/Downloads/taiyo-ai/src/Components/ChartComponent.tsx"],"sourcesContent":["import React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport Chart, { ChartData } from \"chart.js/auto\";\n\ninterface ChartProps {\n  activeCases: number;\n  recoveredCases: number;\n  deathCases: number;\n}\n\ninterface ChartDataInterface {\n  labels: string[];\n  datasets: {\n    label: string;\n    data: number[];\n    backgroundColor: string;\n    borderColor: string;\n    borderWidth: number;\n    fill: boolean;\n  }[];\n}\n\n// interface ChartProps {\n//   chartData: ChartData;\n// }\nconst monthNames = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nconst ChartComponent: React.FC<ChartProps> = ({\n  activeCases,\n  recoveredCases,\n  deathCases,\n}) => {\n  const data = {\n    labels: [\"Active Cases\", \"Recovered Cases\", \"Deaths Cases\"],\n    datasets: [\n      {\n        label: \"COVID-19 Cases in India\",\n        data: [activeCases, recoveredCases, deathCases],\n        backgroundColor: [\"#ff6384\", \"#36a2eb\", \"#cc65fe\"],\n        hoverBackgroundColor: [\"#ff6384\", \"#36a2eb\", \"#cc65fe\"],\n      },\n    ],\n  };\n  const d = new Date();\n  let m = monthNames[d.getMonth()];\n  const [chartData, setChartData] = React.useState<ChartDataInterface>({\n    labels: [\"March\"],\n    datasets: [\n      {\n        label: \"Active Cases\",\n        data: [activeCases],\n        backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n        borderColor: \"rgba(255,99,132,1)\",\n        borderWidth: 1,\n        fill: false,\n      },\n      {\n        label: \"Recovered Cases\",\n        data: [recoveredCases],\n        backgroundColor: \"rgba(54, 162, 235, 0.2)\",\n        borderColor: \"rgba(54, 162, 235, 1)\",\n        borderWidth: 1,\n        fill: false,\n      },\n      {\n        label: \"Deaths Cases\",\n        data: [deathCases],\n        backgroundColor: \"rgba(255, 206, 86, 0.2)\",\n        borderColor: \"rgba(255, 206, 86, 1)\",\n        borderWidth: 1,\n        fill: false,\n      },\n    ],\n  });\n\n  React.useEffect(() => {\n    const ctx = document.getElementById(\"myChart\") as HTMLCanvasElement;\n    const myChart = new Chart(ctx, {\n      type: \"bar\",\n      data: chartData,\n    });\n    return () => {\n      myChart.destroy();\n    };\n  }, [chartData]);\n\n  return <canvas id=\"myChart\" width={400} height={400} />;\n};\n\nexport default ChartComponent;\n"],"mappings":"gIAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,MAAO,CAAAC,KAAK,KAAqB,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAoBjD;AACA;AACA;AACA,GAAM,CAAAC,UAAU,CAAG,CACjB,SAAS,CACT,UAAU,CACV,OAAO,CACP,OAAO,CACP,KAAK,CACL,MAAM,CACN,MAAM,CACN,QAAQ,CACR,WAAW,CACX,SAAS,CACT,UAAU,CACV,UAAU,CACX,CAED,GAAM,CAAAC,cAAoC,CAAG,QAAvC,CAAAA,cAAoCA,CAAAC,IAAA,CAIpC,IAHJ,CAAAC,WAAW,CAAAD,IAAA,CAAXC,WAAW,CACXC,cAAc,CAAAF,IAAA,CAAdE,cAAc,CACdC,UAAU,CAAAH,IAAA,CAAVG,UAAU,CAEV,GAAM,CAAAC,IAAI,CAAG,CACXC,MAAM,CAAE,CAAC,cAAc,CAAE,iBAAiB,CAAE,cAAc,CAAC,CAC3DC,QAAQ,CAAE,CACR,CACEC,KAAK,CAAE,yBAAyB,CAChCH,IAAI,CAAE,CAACH,WAAW,CAAEC,cAAc,CAAEC,UAAU,CAAC,CAC/CK,eAAe,CAAE,CAAC,SAAS,CAAE,SAAS,CAAE,SAAS,CAAC,CAClDC,oBAAoB,CAAE,CAAC,SAAS,CAAE,SAAS,CAAE,SAAS,CACxD,CAAC,CAEL,CAAC,CACD,GAAM,CAAAC,CAAC,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CACpB,GAAI,CAAAC,CAAC,CAAGd,UAAU,CAACY,CAAC,CAACG,QAAQ,CAAC,CAAC,CAAC,CAChC,IAAAC,eAAA,CAAkCpB,KAAK,CAACqB,QAAQ,CAAqB,CACnEV,MAAM,CAAE,CAAC,OAAO,CAAC,CACjBC,QAAQ,CAAE,CACR,CACEC,KAAK,CAAE,cAAc,CACrBH,IAAI,CAAE,CAACH,WAAW,CAAC,CACnBO,eAAe,CAAE,yBAAyB,CAC1CQ,WAAW,CAAE,oBAAoB,CACjCC,WAAW,CAAE,CAAC,CACdC,IAAI,CAAE,KACR,CAAC,CACD,CACEX,KAAK,CAAE,iBAAiB,CACxBH,IAAI,CAAE,CAACF,cAAc,CAAC,CACtBM,eAAe,CAAE,yBAAyB,CAC1CQ,WAAW,CAAE,uBAAuB,CACpCC,WAAW,CAAE,CAAC,CACdC,IAAI,CAAE,KACR,CAAC,CACD,CACEX,KAAK,CAAE,cAAc,CACrBH,IAAI,CAAE,CAACD,UAAU,CAAC,CAClBK,eAAe,CAAE,yBAAyB,CAC1CQ,WAAW,CAAE,uBAAuB,CACpCC,WAAW,CAAE,CAAC,CACdC,IAAI,CAAE,KACR,CAAC,CAEL,CAAC,CAAC,CAAAC,gBAAA,CAAAC,cAAA,CAAAN,eAAA,IA5BKO,SAAS,CAAAF,gBAAA,IAAEG,YAAY,CAAAH,gBAAA,IA8B9BzB,KAAK,CAAC6B,SAAS,CAAC,UAAM,CACpB,GAAM,CAAAC,GAAG,CAAGC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAsB,CACnE,GAAM,CAAAC,OAAO,CAAG,GAAI,CAAAhC,KAAK,CAAC6B,GAAG,CAAE,CAC7BI,IAAI,CAAE,KAAK,CACXxB,IAAI,CAAEiB,SACR,CAAC,CAAC,CACF,MAAO,WAAM,CACXM,OAAO,CAACE,OAAO,CAAC,CAAC,CACnB,CAAC,CACH,CAAC,CAAE,CAACR,SAAS,CAAC,CAAC,CAEf,mBAAOxB,IAAA,WAAQiC,EAAE,CAAC,SAAS,CAACC,KAAK,CAAE,GAAI,CAACC,MAAM,CAAE,GAAI,CAAE,CAAC,CACzD,CAAC,CAED,cAAe,CAAAjC,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}