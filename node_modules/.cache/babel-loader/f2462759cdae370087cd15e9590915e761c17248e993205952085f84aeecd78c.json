{"ast":null,"code":"import * as types from \"./actionTypes\";\n// type Action =\n//   | { type: \"GET_CONTACT_REQUEST\"; payload: [] }\n//   | {\n//       type: \"GET_CONTACT_SUCCESS\";\n//       payload?: [] ;\n//     }\n//   | { type: \"GET_CONTACT_ERROR\"; payload: [] };\nconst initState = {\n  data: [],\n  isLoading: false,\n  isError: false\n};\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let {\n    payload,\n    type\n  } = action;\n  switch (type) {\n    case types.GET_CONTACT_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n        isError: false\n      };\n    case types.GET_CONTACT_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        data: [...state.data, payload],\n        isError: false\n      };\n    case types.DELETE_CONTACT:\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        data: payload\n      };\n    case types.EDIT_CONTACT:\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        data: payload\n      };\n    case types.GET_CONTACT_ERROR:\n      return {\n        ...state,\n        isError: true,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n};\nexport { reducer };","map":{"version":3,"names":["types","initState","data","isLoading","isError","reducer","state","arguments","length","undefined","action","payload","type","GET_CONTACT_REQUEST","GET_CONTACT_SUCCESS","DELETE_CONTACT","EDIT_CONTACT","GET_CONTACT_ERROR"],"sources":["/Users/gauravsinghmehra/Downloads/taiyo-ai/src/Redux/ContactReducer/reducer.ts"],"sourcesContent":["import * as types from \"./actionTypes\";\nimport { ContactType } from \"../../Components/Create\";\n\ninterface State {\n  data: ContactType[];\n  isLoading: boolean;\n  isError: boolean;\n}\n\n// type Action =\n//   | { type: \"GET_CONTACT_REQUEST\"; payload: [] }\n//   | {\n//       type: \"GET_CONTACT_SUCCESS\";\n//       payload?: [] ;\n//     }\n//   | { type: \"GET_CONTACT_ERROR\"; payload: [] };\n\nconst initState: State = {\n  data: [],\n  isLoading: false,\n  isError: false,\n};\n\nconst reducer = (state: State = initState, action: any) => {\n  let { payload, type } = action;\n  switch (type) {\n    case types.GET_CONTACT_REQUEST:\n      return { ...state, isLoading: true, isError: false };\n    case types.GET_CONTACT_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        data: [...state.data, payload],\n        isError: false,\n      };\n    case types.DELETE_CONTACT:\n      return { ...state, isLoading: false, isError: false, data: payload };\n    case types.EDIT_CONTACT:\n      return { ...state, isLoading: false, isError: false, data: payload };\n    case types.GET_CONTACT_ERROR:\n      return { ...state, isError: true, isLoading: false };\n    default:\n      return state;\n  }\n};\n\nexport { reducer };\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,eAAe;AAStC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMC,SAAgB,GAAG;EACvBC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,OAAO,GAAG,SAAAA,CAAA,EAA2C;EAAA,IAA1CC,KAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,SAAS;EAAA,IAAES,MAAW,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACpD,IAAI;IAAEE,OAAO;IAAEC;EAAK,CAAC,GAAGF,MAAM;EAC9B,QAAQE,IAAI;IACV,KAAKZ,KAAK,CAACa,mBAAmB;MAC5B,OAAO;QAAE,GAAGP,KAAK;QAAEH,SAAS,EAAE,IAAI;QAAEC,OAAO,EAAE;MAAM,CAAC;IACtD,KAAKJ,KAAK,CAACc,mBAAmB;MAC5B,OAAO;QACL,GAAGR,KAAK;QACRH,SAAS,EAAE,KAAK;QAChBD,IAAI,EAAE,CAAC,GAAGI,KAAK,CAACJ,IAAI,EAAES,OAAO,CAAC;QAC9BP,OAAO,EAAE;MACX,CAAC;IACH,KAAKJ,KAAK,CAACe,cAAc;MACvB,OAAO;QAAE,GAAGT,KAAK;QAAEH,SAAS,EAAE,KAAK;QAAEC,OAAO,EAAE,KAAK;QAAEF,IAAI,EAAES;MAAQ,CAAC;IACtE,KAAKX,KAAK,CAACgB,YAAY;MACrB,OAAO;QAAE,GAAGV,KAAK;QAAEH,SAAS,EAAE,KAAK;QAAEC,OAAO,EAAE,KAAK;QAAEF,IAAI,EAAES;MAAQ,CAAC;IACtE,KAAKX,KAAK,CAACiB,iBAAiB;MAC1B,OAAO;QAAE,GAAGX,KAAK;QAAEF,OAAO,EAAE,IAAI;QAAED,SAAS,EAAE;MAAM,CAAC;IACtD;MACE,OAAOG,KAAK;EAChB;AACF,CAAC;AAED,SAASD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}