{"ast":null,"code":"import * as types from \"./actionTypes\";\nconst initState = {\n  list: [],\n  isLoading: false,\n  isError: false\n};\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    payload,\n    type\n  } = action;\n  switch (type) {\n    case types.GET_CHART_REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n        isError: false\n      };\n    case types.GET_CHART_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        list: payload,\n        isError: false\n      };\n    case types.GET_CHART_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        isError: true\n      };\n    default:\n      return state;\n  }\n};\nexport { reducer };","map":{"version":3,"names":["types","initState","list","isLoading","isError","reducer","state","arguments","length","undefined","action","payload","type","GET_CHART_REQUEST","GET_CHART_SUCCESS","GET_CHART_ERROR"],"sources":["/Users/gauravsinghmehra/Downloads/taiyo-ai-master/src/Redux/ChartReducer/reducer.ts"],"sourcesContent":["import * as types from \"./actionTypes\";\n\ninterface State {\n  list: any[];\n  isLoading: boolean;\n  isError: boolean;\n}\n\ntype Action =\n  | { type: \"GET_CHART_SUCCESS\"; payload?: null | any[] }\n  | { type: \"GET_CHART_SUCCESS\"; payload?: any[] }\n  | { type: \"GET_CHART_ERROR\"; payload?: null | any[] };\n\nconst initState: State = {\n  list: [],\n  isLoading: false,\n  isError: false,\n};\n\nconst reducer = (state: State = initState, action: Action) => {\n  const { payload, type } = action;\n  switch (type) {\n    case types.GET_CHART_REQUEST:\n      return { ...state, isLoading: true, isError: false };\n    case types.GET_CHART_SUCCESS:\n      return { ...state, isLoading: false, list: payload, isError: false };\n    case types.GET_CHART_ERROR:\n      return { ...state, isLoading: false, isError: true };\n    default:\n      return state;\n  }\n};\n\nexport { reducer };\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,eAAe;AAatC,MAAMC,SAAgB,GAAG;EACvBC,IAAI,EAAE,EAAE;EACRC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,OAAO,GAAG,SAAAA,CAAA,EAA8C;EAAA,IAA7CC,KAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,SAAS;EAAA,IAAES,MAAc,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACvD,MAAM;IAAEE,OAAO;IAAEC;EAAK,CAAC,GAAGF,MAAM;EAChC,QAAQE,IAAI;IACV,KAAKZ,KAAK,CAACa,iBAAiB;MAC1B,OAAO;QAAE,GAAGP,KAAK;QAAEH,SAAS,EAAE,IAAI;QAAEC,OAAO,EAAE;MAAM,CAAC;IACtD,KAAKJ,KAAK,CAACc,iBAAiB;MAC1B,OAAO;QAAE,GAAGR,KAAK;QAAEH,SAAS,EAAE,KAAK;QAAED,IAAI,EAAES,OAAO;QAAEP,OAAO,EAAE;MAAM,CAAC;IACtE,KAAKJ,KAAK,CAACe,eAAe;MACxB,OAAO;QAAE,GAAGT,KAAK;QAAEH,SAAS,EAAE,KAAK;QAAEC,OAAO,EAAE;MAAK,CAAC;IACtD;MACE,OAAOE,KAAK;EAChB;AACF,CAAC;AAED,SAASD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}